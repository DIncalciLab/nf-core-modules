nextflow_process {

    name "Test Process PANGOLIN"
    script "../main.nf"
    process "PANGOLIN"

    tag "modules"
    tag "modules_nfcore"
    tag "pangolin"


    setup {
        run("UNTAR") {
            script "../../untar/main.nf"
            process {
            """
            input[0] = [
                [ ],
                file('/workspace/modules/pangolin-data.v1.29.tar.gz', checkIfExists: true)
            ]
            """
            }
        }
    }

    test("sarscov2 genome [fasta]") {

        when {
            process {
                """
                input[0] = [
                            [ id:'test' ], // meta map
                            [ file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true) ]
                ]
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 genome [fasta] - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                            [ id:'test' ], // meta map
                            [ file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true) ]
                ]
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.report.collect { file(it[1]).getName() } +
                                process.out.versions).match() }
            )
        }

    }

}
